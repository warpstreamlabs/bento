run:
  timeout: 30s

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  # fix: true
  include:
    - EXC0012
    - EXC0014
  exclude-rules:
    - path: _test.go
      linters:
        - bodyclose
        - perfsprint
linters-settings:
  revive:
    enable-all-rules: false
    rules:
      - name: superfluous-else
  errcheck:
    exclude-functions:
      - (*github.com/warpstreamlabs/bento/internal/batch.Error).Failed
      - (*github.com/warpstreamlabs/bento/public/service.BatchError).Failed
  govet:
    enable-all: true
    disable:
      - fieldalignment
      - deepequalerrors
      - shadow
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - hugeParam # Micro-optimisations
      - rangeValCopy # Micro-optimisations
      - ifElseChain # Mostly false positives
      - ptrToRefParam # False positives?
      - importShadow # Probably not worth the hassle...
  # depguard:
  #   rules:
  #     main:
  #       deny:
  #         - pkg: "io/ioutil"
  testifylint:
    disable-all: true
    enable:
      - nil-compare
      - compares
      - error-is-as
      - bool-compare
      - empty
      - len
      - expected-actual
      - error-nil
linters:
  disable-all: true
  enable:
    # Default linters reported by `golangci-lint help linters` in v1.52.0
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    # Extra linters:
    - wastedassign
    - stylecheck
    - gofmt
    - goimports
    # gocritic is very slow (golangci-lint v1.52.0)
    # - gocritic
    - revive
    - unconvert
    - durationcheck
    # - depguard
    # - bodyclose
    # - gosec
    # - misspell
    # - prealloc
    - perfsprint
    - testifylint
    - tenv
    - predeclared
    - mirror
    - rowserrcheck
    - bodyclose
    # nolintlint is too strict given the need to preserve backwards compatability using (sometimes) deprecated functionality.
    # - nolintlint
